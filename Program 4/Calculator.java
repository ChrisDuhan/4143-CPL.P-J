/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package calc_app;
import java.math.*;

/**
 *
 * @author Matthew Trebing
 * @author Christopher Duhan
 * @author Kenadi Campbell 
 */
public class Calculator extends javax.swing.JFrame {

double temp_num;
double number;
double number2;
double answer;
char set_control='z';
char clear_out='o';
boolean squared = false;
double temp2;
String test="";
String str;

    /** Creates new form Calculator */
    public Calculator() {
        initComponents();
       
    }
    
public void check()
{
    if(clear_out=='o')
    {
        results.setText("");
        clear_out='p';
    }
    
}
public void do_math()
{
    if (squared==true)
    {
        number2=temp2;
        squared=false;
    }
    else
    if(set_control=='+')
    {   
        
        number += number2;
        results.setText("");
        results.setText(Double.toString(number));  
    }
    else if(set_control=='-')
    {   
        
        number-=number2;
        results.setText("");
        results.setText(Double.toString(number));
    }
    else if(set_control=='*')
    {   
        
        number*=number2;
         results.setText("");
        results.setText(Double.toString(number));
    }
    else if(set_control=='/')
    {
        number/=number2;
         results.setText("");
        results.setText(Double.toString(number));
    }
    else if(set_control=='m')
    {
        number = number%number2;
         results.setText("");
        results.setText(Double.toString(number));
    }
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        CE = new java.awt.Button();
        clear = new java.awt.Button();
        delete = new java.awt.Button();
        divide = new java.awt.Button();
        multiply = new java.awt.Button();
        num9 = new java.awt.Button();
        num8 = new java.awt.Button();
        num7 = new java.awt.Button();
        num4 = new java.awt.Button();
        num5 = new java.awt.Button();
        num6 = new java.awt.Button();
        minus = new java.awt.Button();
        add = new java.awt.Button();
        num3 = new java.awt.Button();
        num2 = new java.awt.Button();
        num1 = new java.awt.Button();
        plus_minus = new java.awt.Button();
        num0 = new java.awt.Button();
        decimalPoint = new java.awt.Button();
        equals = new java.awt.Button();
        results = new javax.swing.JTextField();
        small_results = new javax.swing.JLabel();
        jSquared = new javax.swing.JButton();
        jExponent = new javax.swing.JButton();
        jPi = new javax.swing.JButton();
        SquareRoot = new javax.swing.JButton();
        jsin = new javax.swing.JButton();
        jArcSin = new javax.swing.JButton();
        jcos = new javax.swing.JButton();
        jArcCos = new javax.swing.JButton();
        jtan = new javax.swing.JButton();
        jArcTan = new javax.swing.JButton();
        jLog = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        CubeRoot = new javax.swing.JButton();
        jMod = new javax.swing.JButton();
        Cubed = new javax.swing.JButton();
        jFactorial = new javax.swing.JButton();
        DecToBin = new java.awt.Button();
        BinToDec = new java.awt.Button();
        DecToHex = new java.awt.Button();
        HexToDec = new java.awt.Button();
        BinToHex = new java.awt.Button();
        HexToBin = new java.awt.Button();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setLocation(new java.awt.Point(500, 250));
        setPreferredSize(new java.awt.Dimension(470, 800));
        setSize(new java.awt.Dimension(470, 800));
        setType(java.awt.Window.Type.UTILITY);

        CE.setActionCommand("CE");
        CE.setBackground(new java.awt.Color(255, 153, 255));
        CE.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CE.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        CE.setLabel(" CE  ");
        CE.setMinimumSize(new java.awt.Dimension(50, 50));
        CE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CEActionPerformed(evt);
            }
        });

        clear.setActionCommand("clear");
        clear.setBackground(new java.awt.Color(204, 153, 255));
        clear.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        clear.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        clear.setLabel("   C   ");
        clear.setMinimumSize(new java.awt.Dimension(50, 50));
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        delete.setActionCommand("delete");
        delete.setBackground(new java.awt.Color(255, 153, 255));
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        delete.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        delete.setLabel("DEL");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        divide.setActionCommand("divide");
        divide.setBackground(new java.awt.Color(204, 153, 255));
        divide.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        divide.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        divide.setLabel("   /   ");
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });

        multiply.setActionCommand("multiply");
        multiply.setBackground(new java.awt.Color(255, 153, 255));
        multiply.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        multiply.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        multiply.setLabel("   *   ");
        multiply.setName(""); // NOI18N
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        num9.setActionCommand("num9");
        num9.setBackground(new java.awt.Color(204, 153, 255));
        num9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        num9.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        num9.setLabel("   9   ");
        num9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num9ActionPerformed(evt);
            }
        });

        num8.setActionCommand("num8");
        num8.setBackground(new java.awt.Color(255, 153, 255));
        num8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        num8.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        num8.setLabel("   8   ");
        num8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num8ActionPerformed(evt);
            }
        });

        num7.setActionCommand("num7");
        num7.setBackground(new java.awt.Color(204, 153, 255));
        num7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        num7.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        num7.setLabel("   7   ");
        num7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num7ActionPerformed(evt);
            }
        });

        num4.setActionCommand("num4");
        num4.setBackground(new java.awt.Color(255, 153, 255));
        num4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        num4.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        num4.setLabel("   4   ");
        num4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num4ActionPerformed(evt);
            }
        });

        num5.setActionCommand("num5");
        num5.setBackground(new java.awt.Color(204, 153, 255));
        num5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        num5.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        num5.setLabel("   5   ");
        num5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num5ActionPerformed(evt);
            }
        });

        num6.setActionCommand("num6");
        num6.setBackground(new java.awt.Color(255, 153, 255));
        num6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        num6.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        num6.setLabel("   6   ");
        num6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num6ActionPerformed(evt);
            }
        });

        minus.setActionCommand("subtract");
        minus.setBackground(new java.awt.Color(204, 153, 255));
        minus.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        minus.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        minus.setLabel("   -   ");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        add.setActionCommand("add");
        add.setBackground(new java.awt.Color(255, 153, 255));
        add.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        add.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        add.setLabel("   +   ");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        num3.setActionCommand("num3");
        num3.setBackground(new java.awt.Color(204, 153, 255));
        num3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        num3.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        num3.setLabel("   3   ");
        num3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num3ActionPerformed(evt);
            }
        });

        num2.setActionCommand("num2");
        num2.setBackground(new java.awt.Color(255, 153, 255));
        num2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        num2.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        num2.setLabel("   2   ");
        num2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num2ActionPerformed(evt);
            }
        });

        num1.setActionCommand("num1");
        num1.setBackground(new java.awt.Color(204, 153, 255));
        num1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        num1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        num1.setLabel("   1   ");
        num1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num1ActionPerformed(evt);
            }
        });

        plus_minus.setActionCommand("plus/minus");
        plus_minus.setBackground(new java.awt.Color(255, 153, 255));
        plus_minus.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        plus_minus.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        plus_minus.setLabel("  +/-  ");
        plus_minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plus_minusActionPerformed(evt);
            }
        });

        num0.setActionCommand("num0");
        num0.setBackground(new java.awt.Color(204, 153, 255));
        num0.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        num0.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        num0.setLabel("   0   ");
        num0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num0ActionPerformed(evt);
            }
        });

        decimalPoint.setActionCommand("point");
        decimalPoint.setBackground(new java.awt.Color(255, 153, 255));
        decimalPoint.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        decimalPoint.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        decimalPoint.setLabel("   .   ");
        decimalPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalPointActionPerformed(evt);
            }
        });

        equals.setActionCommand("equals");
        equals.setBackground(new java.awt.Color(204, 153, 255));
        equals.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        equals.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        equals.setLabel("   =   ");
        equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsActionPerformed(evt);
            }
        });

        results.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        results.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        results.setText("0");

        small_results.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jSquared.setBackground(new java.awt.Color(102, 255, 255));
        jSquared.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jSquared.setText("X²");
        jSquared.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSquaredActionPerformed(evt);
            }
        });

        jExponent.setBackground(new java.awt.Color(102, 255, 255));
        jExponent.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jExponent.setText("10^");
        jExponent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExponentActionPerformed(evt);
            }
        });

        jPi.setBackground(new java.awt.Color(204, 255, 204));
        jPi.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPi.setText("Π");
        jPi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPiActionPerformed(evt);
            }
        });

        SquareRoot.setBackground(new java.awt.Color(204, 255, 204));
        SquareRoot.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        SquareRoot.setText("√");
        SquareRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SquareRootActionPerformed(evt);
            }
        });

        jsin.setBackground(new java.awt.Color(204, 255, 204));
        jsin.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jsin.setText("sin");
        jsin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsinActionPerformed(evt);
            }
        });

        jArcSin.setBackground(new java.awt.Color(102, 255, 255));
        jArcSin.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jArcSin.setText("sin⁻¹");
        jArcSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jArcSinActionPerformed(evt);
            }
        });

        jcos.setBackground(new java.awt.Color(102, 255, 255));
        jcos.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jcos.setText("cos");
        jcos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcosActionPerformed(evt);
            }
        });

        jArcCos.setBackground(new java.awt.Color(204, 255, 204));
        jArcCos.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jArcCos.setText("cos⁻¹");
        jArcCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jArcCosActionPerformed(evt);
            }
        });

        jtan.setBackground(new java.awt.Color(204, 255, 204));
        jtan.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jtan.setText("tan");
        jtan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtanActionPerformed(evt);
            }
        });

        jArcTan.setBackground(new java.awt.Color(102, 255, 255));
        jArcTan.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jArcTan.setText("tan⁻¹");
        jArcTan.setToolTipText("");
        jArcTan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jArcTanActionPerformed(evt);
            }
        });

        jLog.setBackground(new java.awt.Color(102, 255, 255));
        jLog.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLog.setText("log");
        jLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLogActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 255, 204));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.setText("eˣ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        CubeRoot.setBackground(new java.awt.Color(102, 255, 255));
        CubeRoot.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        CubeRoot.setText("∛");
        CubeRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CubeRootActionPerformed(evt);
            }
        });

        jMod.setBackground(new java.awt.Color(204, 255, 204));
        jMod.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jMod.setText("Mod");
        jMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jModActionPerformed(evt);
            }
        });

        Cubed.setBackground(new java.awt.Color(204, 255, 204));
        Cubed.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        Cubed.setText("X³");
        Cubed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CubedActionPerformed(evt);
            }
        });

        jFactorial.setBackground(new java.awt.Color(102, 255, 255));
        jFactorial.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jFactorial.setText("n!");
        jFactorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFactorialActionPerformed(evt);
            }
        });

        DecToBin.setActionCommand("DecToBin");
        DecToBin.setBackground(new java.awt.Color(50, 170, 250));
        DecToBin.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        DecToBin.setLabel("10-2");
        DecToBin.setName("DecToBin"); // NOI18N
        DecToBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecToBinActionPerformed(evt);
            }
        });

        BinToDec.setActionCommand("BinToDec");
        BinToDec.setBackground(new java.awt.Color(50, 170, 250));
        BinToDec.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        BinToDec.setLabel("2-10");
        BinToDec.setName("BinToDec"); // NOI18N
        BinToDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinToDecActionPerformed(evt);
            }
        });

        DecToHex.setActionCommand("DecToHex");
        DecToHex.setBackground(new java.awt.Color(50, 170, 250));
        DecToHex.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        DecToHex.setLabel("10-16");
        DecToHex.setName("DecToHex"); // NOI18N
        DecToHex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecToHexActionPerformed(evt);
            }
        });

        HexToDec.setActionCommand("HexToDec");
        HexToDec.setBackground(new java.awt.Color(50, 170, 250));
        HexToDec.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        HexToDec.setLabel("16-10");
        HexToDec.setName("HexToDec"); // NOI18N
        HexToDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HexToDecActionPerformed(evt);
            }
        });

        BinToHex.setActionCommand("BinToHex");
        BinToHex.setBackground(new java.awt.Color(50, 170, 250));
        BinToHex.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        BinToHex.setLabel("2-16");
        BinToHex.setName("BinToHex"); // NOI18N
        BinToHex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinToHexActionPerformed(evt);
            }
        });

        HexToBin.setActionCommand("HexToBin");
        HexToBin.setBackground(new java.awt.Color(50, 170, 250));
        HexToBin.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        HexToBin.setLabel("16-2");
        HexToBin.setName("HexToBin"); // NOI18N
        HexToBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HexToBinActionPerformed(evt);
            }
        });

        jMenu2.setText("Scientific");

        jMenu1.setText("Binary");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenu1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(small_results, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(DecToBin, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jMod, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSquared, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Cubed, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(jFactorial, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jtan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(7, 7, 7)
                                                .addComponent(jArcTan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jsin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jPi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(CubeRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jArcSin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jExponent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(SquareRoot, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jcos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jArcCos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CE, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(num7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(num8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(num9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(divide, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLog, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BinToDec, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(num1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(num2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(num3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(num4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(num5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(num6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(1, 1, 1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(plus_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(num0, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(DecToHex, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(HexToDec, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(decimalPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(HexToBin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(BinToHex, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addComponent(results))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(small_results, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(results, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jMod, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSquared, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cubed, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPi, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jExponent, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CubeRoot, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                            .addComponent(SquareRoot, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jsin, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jArcSin, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jArcCos, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcos, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jArcTan, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtan, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLog, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CE, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(num8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(num5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(num2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(plus_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num0, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(decimalPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DecToBin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DecToHex, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BinToHex, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HexToBin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HexToDec, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BinToDec, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DecToBin.getAccessibleContext().setAccessibleName("DecToBin");
        BinToDec.getAccessibleContext().setAccessibleName("BinToDec");
        DecToHex.getAccessibleContext().setAccessibleName("DecToHex");
        HexToDec.getAccessibleContext().setAccessibleName("HexToDec");
        BinToHex.getAccessibleContext().setAccessibleName("BinToHex");
        HexToBin.getAccessibleContext().setAccessibleName("HexToBin");

        pack();
    }// </editor-fold>                        

    private void CEActionPerformed(java.awt.event.ActionEvent evt) {                                   
        results.setText("");
    }                                  

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {                                      
        results.setText("");
        number = 0;
        number2 = 0;
        answer=0;
    }                                     

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {                                       
        str=results.getText();
        if (str != null && str.length() > 0) 
        {
            str = str.substring(0, str.length() - 1);
        }
        results.setText(str);
    }                                      

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {                                       
     if(set_control=='/')
     {
         number2=Double.parseDouble(results.getText());
        
        
        do_math();
        
      
         clear_out='o';
     }
     else if(set_control=='z')
     {
  
     small_results.setText(results.getText());
     set_control='/';
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        do_math();
        set_control='/';
        clear_out='o';
        
     }
    }                                      

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {                                         
         if(set_control=='*')
     {
         number2=Double.parseDouble(results.getText());
       
        do_math();
      
         clear_out='o';
     }
     else if(set_control=='z')
     {
     number=Double.parseDouble(results.getText());
     small_results.setText(results.getText());
     set_control='*';
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        do_math();
        set_control='*';
        clear_out='o';
      
     }
    }                                        

    private void num9ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        check();
        results.setText(results.getText()+"9");
    }                                    

    private void num8ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        check();
        results.setText(results.getText()+"8");
        
    }                                    

    private void num7ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        check();
        results.setText(results.getText()+"7");
    }                                    

    private void num5ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        check();
        results.setText(results.getText()+"5");
    }                                    

    private void num6ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        check();
        results.setText(results.getText()+"6");
    }                                    

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {                                      
    if(set_control=='-')
     {
         number2=Double.parseDouble(results.getText());
        do_math();
        
        clear_out='o';
     }
     else if(set_control=='z')
     {
    
     
     number=Double.parseDouble(results.getText());
     
     small_results.setText(results.getText());
     set_control='-';
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        
        
        do_math();
        
        set_control='-';
        clear_out='o';
        
     }
    }                                     

    private void addActionPerformed(java.awt.event.ActionEvent evt) {                                    
     if(set_control=='+')
     {
        number2=Double.parseDouble(results.getText());
        do_math();
        
        clear_out='o';
     }
     else if(set_control=='z')
     {
     
     
     number=Double.parseDouble(results.getText());
     
     small_results.setText(results.getText());
     set_control='+';
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        do_math();
        set_control='+';
        clear_out='o';
     }
         
    }                                   

    private void num3ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        check();
        results.setText(results.getText()+"3");
    }                                    

    private void num2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        check();
        results.setText(results.getText()+"2");
    }                                    

    private void num1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        check();
        results.setText(results.getText()+"1");
    }                                    

    private void plus_minusActionPerformed(java.awt.event.ActionEvent evt) {                                           
     
        Double number3 = Double.parseDouble(results.getText());
        number3 = number3 * (-1);
        results.setText(Double.toString(number3));
    }                                          

    private void num0ActionPerformed(java.awt.event.ActionEvent evt) {                                     
       check();
        results.setText(results.getText()+"0");
    }                                    

    private void decimalPointActionPerformed(java.awt.event.ActionEvent evt) {                                             
        
        String decimal = results.getText();
        if(decimal.indexOf(".") < 0)
            results.setText(results.getText()+".");
        else
            results.setText(results.getText()+"");
    }                                            

    private void equalsActionPerformed(java.awt.event.ActionEvent evt) {                                       
        if(set_control=='z')
        {
            results.setText("0");
        }
        else
        {
            number2=Double.parseDouble(results.getText());
            do_math();
            set_control='z';
            clear_out='o';
            squared = false;
        }
    }                                      

    private void num4ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        check();
        results.setText(results.getText()+"4");
    }                                    

    private void jSquaredActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if(set_control=='z')
        {
            number=Double.parseDouble(results.getText());
            number=Math.pow(number, 2);
            results.setText(Double.toString(number));
        }


     else
     {
        number2=Double.parseDouble(results.getText());
        number2=Math.pow(number2,2);
        temp2=number2;
        do_math();
        squared=true;
        clear_out='o';
     }
    }                                        

    private void jtanActionPerformed(java.awt.event.ActionEvent evt) {                                     
             if(set_control=='z')
     {
     number=Double.parseDouble(results.getText());
     number = Math.tan(number);
     results.setText(Double.toString(number));
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        number2 = Math.tan(number2);
        do_math();
        squared=true;
        clear_out='o';
     }
    }                                    

    private void jArcCosActionPerformed(java.awt.event.ActionEvent evt) {                                        
             if(set_control=='z')
     {
     number=Double.parseDouble(results.getText());
     number = Math.cosh(number);
     results.setText(Double.toString(number));
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        number2 = Math.cosh(number2);
        do_math();
        squared=true;
        clear_out='o';
     }
    }                                       

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
                if(set_control=='z')
        {
            number=Double.parseDouble(results.getText());
            number=Math.pow(Math.E,number);
            results.setText(Double.toString(number));
        }


     else
     {
        number2=Double.parseDouble(results.getText());
        number2=Math.pow(Math.E,number2);
        temp2=number2;
        
        do_math();
        squared=true;
        clear_out='o';
    }                                        
    }
    private void jPiActionPerformed(java.awt.event.ActionEvent evt) {                                    
        if(set_control=='z')
        {
                number=Math.PI;
                results.setText(Double.toString(Math.PI));
        }
        else if (set_control!='z'){
        number2=Double.parseDouble(results.getText());
        number2=number2*Math.PI;
        temp2=number2;
        do_math();
        squared=true;
        clear_out='o';
        }    
    }                                   

    private void SquareRootActionPerformed(java.awt.event.ActionEvent evt) {                                           
        if(set_control=='z')
        {
            if(results.getText().equals(""))
            {
                results.setText(Double.toString(0));
            }
            else
                number=Double.parseDouble(results.getText());
                number=Math.sqrt(number);
                results.setText(Double.toString(number));
        }
        else if (set_control!='z'){
        number2=Double.parseDouble(results.getText());
        number2=Math.sqrt(number2);
        temp2=number2;
        do_math();
        squared=true;
        clear_out='o';
        }
    }                                          

    private void jFactorialActionPerformed(java.awt.event.ActionEvent evt) {                                           
        int total = 1, num = (int) Double.parseDouble(results.getText());
        for (int i = 2; i <= num; ++i)
        {
            total = total * i; 
        }
        results.setText(Double.toString(total));   
    }                                          

    private void jsinActionPerformed(java.awt.event.ActionEvent evt) {                                     
     if(set_control=='z')
     {
     number=Double.parseDouble(results.getText());
     number = Math.sin(number);
     results.setText(Double.toString(number));
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        number2 = Math.sin(number2);
      
        do_math();
        squared=true;
        clear_out='o';
     }
    }                                    

    private void jModActionPerformed(java.awt.event.ActionEvent evt) {                                     
     if(set_control=='m')
     {
         number2=Double.parseDouble(results.getText());
         do_math();
         clear_out='o';
     }
     else if(set_control=='z')
     {
     number=Double.parseDouble(results.getText());
     small_results.setText(results.getText());
     set_control='m';
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        do_math();
        set_control='m';
        clear_out='o';
        
     }
    }                                    

    private void CubedActionPerformed(java.awt.event.ActionEvent evt) {                                      
       if(set_control=='z')
        {
            number=Double.parseDouble(results.getText());
            number=Math.pow(number, 2);
            results.setText(Double.toString(number));
        }


     else
     {
        number2=Double.parseDouble(results.getText());
        number2=Math.pow(number2,3);
        temp2=number2;
        do_math();
        squared=true;
        clear_out='o';
     }
    }                                     

    private void jExponentActionPerformed(java.awt.event.ActionEvent evt) {                                          
        if(set_control=='z')
        {
            number=Double.parseDouble(results.getText());
            number=Math.pow(10, number);
            results.setText(Double.toString(number));
        }
     else
     {
        number2=Double.parseDouble(results.getText());
        number2=Math.pow(10, number2);
        do_math();
        squared=true;
        clear_out='o';
     }
    }                                         

    private void CubeRootActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if(set_control=='z')
        {
            if(results.getText().equals(""))
            {
                results.setText(Double.toString(0));
            }
            else
                number=Double.parseDouble(results.getText());
            number=Math.cbrt(number);
                results.setText(Double.toString(number));
        }
        else if (set_control!='z'){
        number2=Double.parseDouble(results.getText());
        number2=Math.sqrt(number2);
        temp2=number2;
        do_math();
        squared=true;
        clear_out='o';
        }
    }                                        

    private void jcosActionPerformed(java.awt.event.ActionEvent evt) {                                     
             if(set_control=='z')
     {
     number=Double.parseDouble(results.getText());
     number = Math.cos(number);
     results.setText(Double.toString(number));
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        number2 = Math.cos(number2);
        do_math();
        squared=true;
        clear_out='o';
     }
    }                                    

    private void jArcSinActionPerformed(java.awt.event.ActionEvent evt) {                                        
             if(set_control=='z')
     {
     number=Double.parseDouble(results.getText());
     number = Math.sinh(number);
     results.setText(Double.toString(number));
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        number2 = Math.sinh(number2);
        do_math();
        squared=true;
        clear_out='o';
     }
    }                                       

    private void jArcTanActionPerformed(java.awt.event.ActionEvent evt) {                                        
             if(set_control=='z')
     {
     number=Double.parseDouble(results.getText());
     number = Math.tanh(number);
     results.setText(Double.toString(number));
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        number2 = Math.tanh(number2);
        do_math();
        squared=true;
        clear_out='o';
     }
    }                                       

    private void jLogActionPerformed(java.awt.event.ActionEvent evt) {                                     
             if(set_control=='z')
     {
     number=Double.parseDouble(results.getText());
     number = Math.log(number);
     results.setText(Double.toString(number));
     clear_out='o';
     }
     else
     {
        number2=Double.parseDouble(results.getText());
        number2 = Math.log(number2);
        do_math();
        squared=true;
        clear_out='o';
     }
    }                                    

    // All conversion methods coded 4 Dec 2017 Max Duhan
    // Any non-binary string that has a BinToXXX method called on it will not
    // execute, but will retain output.
    private void DecToBinActionPerformed(java.awt.event.ActionEvent evt) {                                         
        results.setText(Integer.toBinaryString((int) Double.parseDouble(results.getText())));
    }                                        

    private void BinToDecActionPerformed(java.awt.event.ActionEvent evt) {                                         
        results.setText(Integer.toString(Integer.parseInt(Integer.toString((int)Double.parseDouble(results.getText())), 2)));
    }                                        

    private void DecToHexActionPerformed(java.awt.event.ActionEvent evt) {                                         
        results.setText(Integer.toHexString((int) Double.parseDouble(results.getText())));
    }                                        

    private void HexToDecActionPerformed(java.awt.event.ActionEvent evt) {                                         
        results.setText(Integer.toString(Integer.parseInt(results.getText(), 16)));
    }                                        

    private void BinToHexActionPerformed(java.awt.event.ActionEvent evt) {                                         
        results.setText(Integer.toString(Integer.parseInt(results.getText(),2),16));
    }                                        

    private void HexToBinActionPerformed(java.awt.event.ActionEvent evt) {                                         
        results.setText(Integer.toString(Integer.parseInt(results.getText(),16),2));
    }                                        

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {                                       
        CE.setVisible(false);
    }                                      

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        // this does nothing, it should probably be removed
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            new Calculator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private java.awt.Button BinToDec;
    private java.awt.Button BinToHex;
    private java.awt.Button CE;
    private javax.swing.JButton CubeRoot;
    private javax.swing.JButton Cubed;
    private java.awt.Button DecToBin;
    private java.awt.Button DecToHex;
    private java.awt.Button HexToBin;
    private java.awt.Button HexToDec;
    private javax.swing.JButton SquareRoot;
    private java.awt.Button add;
    private javax.swing.ButtonGroup buttonGroup1;
    private java.awt.Button clear;
    private java.awt.Button decimalPoint;
    private java.awt.Button delete;
    private java.awt.Button divide;
    private java.awt.Button equals;
    private javax.swing.JButton jArcCos;
    private javax.swing.JButton jArcSin;
    private javax.swing.JButton jArcTan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jExponent;
    private javax.swing.JButton jFactorial;
    private javax.swing.JButton jLog;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JButton jMod;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jPi;
    private javax.swing.JButton jSquared;
    private javax.swing.JButton jcos;
    private javax.swing.JButton jsin;
    private javax.swing.JButton jtan;
    private java.awt.Button minus;
    private java.awt.Button multiply;
    private java.awt.Button num0;
    private java.awt.Button num1;
    private java.awt.Button num2;
    private java.awt.Button num3;
    private java.awt.Button num4;
    private java.awt.Button num5;
    private java.awt.Button num6;
    private java.awt.Button num7;
    private java.awt.Button num8;
    private java.awt.Button num9;
    private java.awt.Button plus_minus;
    private javax.swing.JTextField results;
    private javax.swing.JLabel small_results;
    // End of variables declaration                         
}
